{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\H45T3R\\\\Desktop\\\\chat-socketio\\\\client\\\\src\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useState } from \"react\";\n\n//in this component we will be sending and receiving messages through socket.io, so we do\n//need to pass the socket variable that we created in the App.js in frontend as props to our chat component, and also\n//we need to keep track of the username of user and the room of the user\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = _ref => {\n  _s();\n  let {\n    socket,\n    username,\n    room\n  } = _ref;\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n\n  //this function will allow us to send messages through socket server.\n  //this function is asynchronous so that we actually wait for the message to be sent\n  const sendMessage = async () => {\n    if (currentMessage !== \"\") {\n      // when we send a message ,we want several things with it,like the time, and the user who sent it,\n      // so this object messageData will store that.\n      // And we will send this object to our socket server\n      const messageData = {\n        room: room,\n        author: username,\n        message: currentMessage,\n        time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes()\n      };\n      await socket.emit(\"send_message\", messageData);\n    }\n  };\n\n  //useEffect will listen whenever there are changes to our socket,i.e.,it is going to listen every time it receives another message.\n  //the second parameter in useEffect is \"socket\", so whenever it changes it should call the fucntion in first parameter.\n  //this is the frontend listening to the backend\n  useEffect(() => {\n    socket.on(\"receive_message\", data => {\n      console.log(data);\n    });\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Live Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-body\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Hey...\",\n        onChange: event => {\n          setCurrentMessage(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"\\u25BA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n};\n_s(Chat, \"ClmOeYeQQKv35HyjRdeA4viD72A=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Chat","_ref","_s","socket","username","room","currentMessage","setCurrentMessage","sendMessage","messageData","author","message","time","Date","now","getHours","getMinutes","emit","on","data","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","event","target","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/H45T3R/Desktop/chat-socketio/client/src/Chat.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport {useState} from \"react\";\r\n\r\n\r\n//in this component we will be sending and receiving messages through socket.io, so we do\r\n//need to pass the socket variable that we created in the App.js in frontend as props to our chat component, and also\r\n//we need to keep track of the username of user and the room of the user\r\n\r\nconst Chat = ({socket, username, room}) => {\r\n    const [currentMessage, setCurrentMessage] = useState(\"\");\r\n\r\n    //this function will allow us to send messages through socket server.\r\n    //this function is asynchronous so that we actually wait for the message to be sent\r\n    const sendMessage = async () => {\r\n        if(currentMessage !== \"\"){\r\n\r\n            // when we send a message ,we want several things with it,like the time, and the user who sent it,\r\n            // so this object messageData will store that.\r\n            // And we will send this object to our socket server\r\n            const messageData = {\r\n                room: room,\r\n                author: username,\r\n                message: currentMessage,\r\n                time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes(),\r\n            };\r\n\r\n            await socket.emit(\"send_message\", messageData);\r\n        }\r\n    };\r\n\r\n    //useEffect will listen whenever there are changes to our socket,i.e.,it is going to listen every time it receives another message.\r\n    //the second parameter in useEffect is \"socket\", so whenever it changes it should call the fucntion in first parameter.\r\n    //this is the frontend listening to the backend\r\n    useEffect(() => {\r\n        socket.on(\"receive_message\", (data) => {\r\n            console.log(data);\r\n        });\r\n    }, [socket]);\r\n\r\n    return (\r\n      <div className='chat-window'>\r\n          <div className='chat-header'>\r\n              <p>Live Chat</p>\r\n          </div>\r\n          <div className='chat-body'></div>\r\n          <div className='chat-footer'>\r\n              <input \r\n                type=\"text\" \r\n                placeholder='Hey...'\r\n                onChange={(event) => {\r\n                    setCurrentMessage(event.target.value);\r\n                }}></input>\r\n              <button onClick={sendMessage}>&#9658;</button>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Chat"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAAQC,QAAQ,QAAO,OAAO;;AAG9B;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,IAAI,GAAGC,IAAA,IAA8B;EAAAC,EAAA;EAAA,IAA7B;IAACC,MAAM;IAAEC,QAAQ;IAAEC;EAAI,CAAC,GAAAJ,IAAA;EAClC,MAAM,CAACK,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACA;EACA,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAGF,cAAc,KAAK,EAAE,EAAC;MAErB;MACA;MACA;MACA,MAAMG,WAAW,GAAG;QAChBJ,IAAI,EAAEA,IAAI;QACVK,MAAM,EAAEN,QAAQ;QAChBO,OAAO,EAAEL,cAAc;QACvBM,IAAI,EAAE,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,GAAG,GAAG,GAAG,IAAIF,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,CAACE,UAAU,CAAC;MAClF,CAAC;MAED,MAAMb,MAAM,CAACc,IAAI,CAAC,cAAc,EAAER,WAAW,CAAC;IAClD;EACJ,CAAC;;EAED;EACA;EACA;EACAb,SAAS,CAAC,MAAM;IACZO,MAAM,CAACe,EAAE,CAAC,iBAAiB,EAAGC,IAAI,IAAK;MACnCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,EAAE,CAAChB,MAAM,CAAC,CAAC;EAEZ,oBACEJ,OAAA;IAAKuB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACxBxB,OAAA;MAAKuB,SAAS,EAAC,aAAa;MAAAC,QAAA,eACxBxB,OAAA;QAAAwB,QAAA,EAAG;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,eACN5B,OAAA;MAAKuB,SAAS,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACjC5B,OAAA;MAAKuB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACxBxB,OAAA;QACE6B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,QAAQ;QACpBC,QAAQ,EAAGC,KAAK,IAAK;UACjBxB,iBAAiB,CAACwB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;QACzC;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACb5B,OAAA;QAAQmC,OAAO,EAAE1B,WAAY;QAAAe,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAAzB,EAAA,CAhDGF,IAAI;AAAAmC,EAAA,GAAJnC,IAAI;AAkDV,eAAeA,IAAI;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}